from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit, execute, Aer
import numpy as np

# define a quantum register with a single qubit
q = QuantumRegister(2,"q")
# define a classical register with a single bit
c = ClassicalRegister(1,"c")
# define a quantum circuit
qc = QuantumCircuit(q,c)

qc.barrier()
qc.z(q[1])
qc.x(q[1])
qc.x(q[0]) 
qc.h(q[0]) 
qc.barrier()

# draw the circuit
display(qc.draw(output="mpl"))
unitary = np.around(execute(qc, Aer.get_backend('unitary_simulator')).result().get_unitary(), 5)
print(unitary)
