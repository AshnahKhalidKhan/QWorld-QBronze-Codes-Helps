import cirq
from cirq import H, S, T, Z, X, rz, ry, rz
from math import pi
import numpy as np
def bitstring(bits):
    return "".join(str(int(b)) for b in bits)

circuit = cirq.Circuit()
q0, q1 = cirq.LineQubit.range(2)

circuit.append(H.on(q1))
circuit.append(H.on(q0).controlled_by(q1))
# circuit.append(H.on(q0))
# circuit.append(rz(pi/2).on(q1).controlled_by(q0))
# circuit.append(rz(pi/2).on(q1).controlled_by(q0))

circuit.append(measure(q0, q1, key='result'))

print("the circuit is\n", circuit, "\n")

sim = cirq.Simulator()
results = sim.simulate(circuit)
state1 = results.state_vector()

print("the quantum state is\n", results.dirac_notation(), "\n")


samples = sim.run(circuit, repetitions=1000)
print("outcomes:", samples.histogram(key='result', fold_func=bitstring))
